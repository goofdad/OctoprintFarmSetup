#
# GIYF ---
# This config is the result of starting with the OctoPi HaProxy config
# and modifying it to do what I want. I don't claim it to be the most
# efficient, nor the simplest. I just claim it works for me. YMMV.
#
# This file is not commented / explained. See the main server version for that :)
#
# Doug Young, 12/05/17
#

global
        maxconn 4096
        user haproxy
        group haproxy
        log 127.0.0.1 local2 debug

defaults
        log     global
        mode    http

	option  httplog
        option  http-server-close
        option  forwardfor
	
        timeout connect 5s
        timeout client  15min
        timeout server  15min
    
# Public frontend forwards straight to cr-10 (main server)
frontend public
        bind *:80
        bind 0.0.0.0:443 ssl crt /etc/ssl/snakeoil.pem

	option forwardfor

	default_backend webserver

frontend private
        bind *:2554

	acl webcam-noslash path_reg ^/webcam[^/]
	acl webcam path_beg /webcam/

	redirect prefix / code 301 drop-query append-slash if webcam-noslash

	use_backend webcam if webcam
	default_backend local

backend webserver
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server webserver1 cr-10.local:4552
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

backend local
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server octoprint1 127.0.0.1:5000
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

backend webcam
        reqrep ^([^\ :]*)\ /webcam/(.*)     \1\ /\2

	server webcam1  127.0.0.1:8080
        errorfile 503 /etc/haproxy/errors/503-no-webcam.http
