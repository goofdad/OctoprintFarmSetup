#
# GIYF ---
# This config is the result of starting with the OctoPi HaProxy config
# and modifying it to do what I want. I don't claim it to be the most
# efficient, nor the simplest. I just claim it works for me. YMMV.
#
# Doug Young, 12/05/17
#

global
        maxconn 4096
	daemon
        user haproxy
        group haproxy
        log 127.0.0.1 local2 

# Settings in "defaults" apply to all services (frontend and backend).
defaults
	# use the global log settings
        log     global

	# proxy as http requests
        mode    http

	# log http request details
	option  httplog

	# close server connections, while allowing keep-alive on clients
        option http-server-close

	# add the "X-Forwarded-For" header
	option forwardfor

	# timeouts
	timeout connect 5s
        timeout client  15min
        timeout server  15min

# Frontends define the "server" sockets availabe to connect to.
# The public frontend defaults to the webserver on cr-10, which
# publishes a page with tabs (using an iframe ... octoprint
# doesn't care much contained in a jquery tab) for each printer.
#
# It supports each printer using the following url's
#    printer.<public dns>.<public TLD> redirects to printer private haproxy
#    printer.local redirects to main website, <printer> tab
#    primaryprinter.local/printer redirects

frontend public

        # listen on http port 80, https port 443
	bind *:80
        bind 0.0.0.0:443 ssl crt /etc/ssl/snakeoil.pem

	# Log the Host and User-Agent for posterity
        capture request header Host len 64
	capture request header User-Agent len 128

	# CR-10 Printer matching rules.
	acl cr-10-webcam path_reg ^/cr-10-webcam/
	acl cr-10-host hdr_reg(host) cr10.youngjeesh.org
	acl cr-10 path_reg ^/cr-10/?

	# Printrbot matching rules.
	acl printrbot-webcam path_reg ^/printrbot-webcam/
	acl printrbot-host hdr_reg(host) printrbot.youngjeesh.org
	acl printrbot path_reg ^/printrbot/?

	# Hypercube matching rules.
	acl hypercube-webcam path_reg ^/hypercube-webcam/
	acl hypercube-host hdr_reg(host) hypercube.youngjeesh.org
	acl hypercube path_reg ^/hypercube/?
	
	# CR-10 backend rules
	use_backend cr-10-webcam if cr-10-webcam
	use_backend cr-10-host if cr-10-host
	use_backend cr-10 if  cr-10

	# Printrbot backend rules
	use_backend printrbot-webcam if printrbot-webcam
	use_backend printrbot-host if printrbot-host
	use_backend printrbot if printrbot

	# Hypercube backend rules
	use_backend hypercube-webcam if hypercube-webcam
	use_backend hypercube-host if hypercube-host
	use_backend hypercube if hypercube

	# If it doesn't match, head for the CR-10 webserver
	default_backend webserver

# Each printer has it's own private frontend, listening
# on port 2554

frontend private
        # Listen on 2554
        bind *:2554

	# if we get a webcam url, forward it to the local webcam service
	# otherwise forward to the local backend.
	acl webcam-noslash path_reg ^/webcam[^/]
	acl webcam path_beg /webcam/

	# webcam is not valid without a trailing slash. Forward and add
	# it if it's missing.
	redirect prefix / code 301 drop-query append-slash if webcam-noslash

	#select the appropriate backend.
	use_backend webcam if webcam
	default_backend local

# webserver local to the local machine.
backend webserver
        # do we need an X-Scheme header?
	acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        # fix the URL
	reqrep ^([^\ :]*)\ /(.*) \1\ /\2

	# add the X-Scheme header.
	reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

	# actual server
        server webserver1 cr-10.local:4552
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

# actual Octoprint backend
backend local
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server octoprint0 cr-10.local:5000    
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

# CR-10 specific backend
backend cr-10
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /cr-10/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

	# This allows octoprint to work behind the <mumble>/cr-10/<mumble> url
        reqadd X-Script-Name:\ /cr-10

        server cr-10 cr-10.local:2554
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

# CR-10 host driven backend
backend cr-10-host
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /cr-10/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server cr-10-host cr-10.local:2554    
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http
	
	# Require Authentication !!!
	acl AuthOkay http_auth(L1)
        http-request auth realm octoprint if !AuthOkay

# CR-10 local webcam
backend webcam
        reqrep ^([^\ :]*)\ /webcam/(.*)     \1\ /\2

	server webcam-local cr-10.local:8080
        errorfile 503 /etc/haproxy/errors/503-no-webcam.http

# CR-10 generic forwarded webcam
backend cr-10-webcam
        reqrep ^([^\ :]*)\ /cr-10-webcam/(.*)     \1\ /\2

	server cr-10-webcam cr-10.local:8080
        errorfile 503 /etc/haproxy/errors/503-no-webcam.http

# Printrbot URL based backend
backend printrbot
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /printrbot/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

	reqadd X-Script-Name:\ /printrbot

	server printrbot printrbot.local:2554
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

# Printrbot Host based backend
backend printrbot-host
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /printrbot/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server printrbot-host printrbot.local:2554
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http
	
        acl AuthOkay http_auth(L1)
        http-request auth realm octoprint if !AuthOkay

# Printrbot webcam backend
backend printrbot-webcam
        reqrep ^([^\ :]*)\ /printrbot-webcam/(.*)     \1\ /\2

	server printrbot-webcam printrbot.local:8080
        errorfile 503 /etc/haproxy/errors/503-no-webcam.http

# Hypercube URL based Backend
backend hypercube
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /hypercube/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

	reqadd X-Script-Name:\ /hypercube

        server hypercube hypercube:2554
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http

# Hypercube Host based backend
backend hypercube-host
        acl needs_scheme req.hdr_cnt(X-Scheme) eq 0

        reqrep ^([^\ :]*)\ /hypercube/(.*) \1\ /\2
        reqadd X-Scheme:\ https if needs_scheme { ssl_fc }
        reqadd X-Scheme:\ http if needs_scheme !{ ssl_fc }

        server hypercube-host hypercube:2554
        errorfile 503 /etc/haproxy/errors/503-no-octoprint.http
	
        acl AuthOkay http_auth(L1)
        http-request auth realm octoprint if !AuthOkay

# Hypercube webcam backend
backend hypercube-webcam
        reqrep ^([^\ :]*)\ /hypercube-webcam/(.*)     \1\ /\2
        server hypercube-webcam hypercube.local:8080
        errorfile 503 /etc/haproxy/errors/503-no-webcam.http

# Authorized Users.
userlist L1
        group G1
        user <USER> insecure-password <PASSWORD> groups G1
